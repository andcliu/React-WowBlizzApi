{"ast":null,"code":"// import React,{Component} from 'react';\n// import {Table} from 'reactstrap';\n// export default class SharedTable extends Component{\n// \tconstructor(props){\n// \t\tsuper(props);\n// \t\tthis.convertArray=this.convertArray.bind(this);\n// \t}\n//   convertArray=(obj,type) =>{\n//     const item=[];\n//     Object.keys(obj).forEach(function(key) {\n//       item.push(obj[key]);\n//     });\n//     console.log(obj);\n//     return item[0][type];\n//   };\n// \trender(){\n// \t\tconst header=this.props.header.map((k)=>{\n// \t\t\treturn(\n// \t\t\t\t<th>{k}</th>\n// \t\t\t)\n// \t\t});\n// \t\tconst data=this.convertArray(this.props.data,this.props.type);\n// \t\tconst parsedData=data.map((k,i)=> {\n// \t\t\treturn(\n// \t\t\t\t<tr>\n// \t\t\t\t\t<td>{k.name}</td>\n// \t\t\t\t\t<td>{k.icon}</td>\n// \t\t\t\t\t<td>{(k.isGround && k.isFlying) ? 'Flying & Ground Type' : k.isGround ? 'Ground Type' : k.isFlying ? 'Flying Type' : 'None'}</td>\n// \t\t\t\t</tr>\n// \t\t\t)\n// \t\t});\n// \t\treturn(\t\n// \t\t\t<Table>\n// \t\t\t\t<thead>\n// \t\t\t\t\t{header}\n// \t\t\t\t</thead>\n// \t\t\t\t<tbody>\n// \t\t\t\t\t{data}\n// \t\t\t\t</tbody>\n// \t\t\t</Table>\n// \t\t)\n// \t}\n// }","map":{"version":3,"sources":["/mnt/c/Users/Andrew/Documents/railsReact/full_wow/src/components/sharedTable.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React,{Component} from 'react';\r\n// import {Table} from 'reactstrap';\r\n\r\n// export default class SharedTable extends Component{\r\n// \tconstructor(props){\r\n// \t\tsuper(props);\r\n// \t\tthis.convertArray=this.convertArray.bind(this);\r\n// \t}\r\n\r\n//   convertArray=(obj,type) =>{\r\n//     const item=[];\r\n//     Object.keys(obj).forEach(function(key) {\r\n//       item.push(obj[key]);\r\n//     });\r\n//     console.log(obj);\r\n//     return item[0][type];\r\n//   };\r\n\r\n// \trender(){\r\n// \t\tconst header=this.props.header.map((k)=>{\r\n// \t\t\treturn(\r\n// \t\t\t\t<th>{k}</th>\r\n// \t\t\t)\r\n// \t\t});\r\n\r\n// \t\tconst data=this.convertArray(this.props.data,this.props.type);\r\n// \t\tconst parsedData=data.map((k,i)=> {\r\n// \t\t\treturn(\r\n// \t\t\t\t<tr>\r\n// \t\t\t\t\t<td>{k.name}</td>\r\n// \t\t\t\t\t<td>{k.icon}</td>\r\n// \t\t\t\t\t<td>{(k.isGround && k.isFlying) ? 'Flying & Ground Type' : k.isGround ? 'Ground Type' : k.isFlying ? 'Flying Type' : 'None'}</td>\r\n// \t\t\t\t</tr>\r\n// \t\t\t)\r\n// \t\t});\r\n\r\n// \t\treturn(\t\r\n// \t\t\t<Table>\r\n// \t\t\t\t<thead>\r\n// \t\t\t\t\t{header}\r\n// \t\t\t\t</thead>\r\n// \t\t\t\t<tbody>\r\n// \t\t\t\t\t{data}\r\n// \t\t\t\t</tbody>\r\n// \t\t\t</Table>\r\n// \t\t)\r\n// \t}\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}